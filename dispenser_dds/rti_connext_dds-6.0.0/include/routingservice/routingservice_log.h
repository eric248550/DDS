/* (c) Copyright 2003-2018, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)routingservice_log.h    generated by: makeheader    Thu Feb 28 22:15:03 2019
 *
 *		built from:	log.ifc
 */

#ifndef routingservice_log_h
#define routingservice_log_h


  #ifndef router_dll_h
    #include "routingservice/routingservice_dll.h"
  #endif
  #ifndef log_common_h
    #include "log/log_common.h"
  #endif
  #ifndef advlog_context_h
      #include "advlog/advlog_context.h"
  #endif
  #ifdef __cplusplus
      extern "C" {
  #endif


  /*i \ingroup ROUTERLogModule
      Submodule ID for Common submodule
  */          
  #define SUBMODULE_ROUTER_COMMON (0x1000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for Service submodule
  */
  #define SUBMODULE_ROUTER_SERVICE  (0x2000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for CfgManager submodule
  */
  #define SUBMODULE_ROUTER_CONFIG (0x3000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for remoteConfig submodule
  */
  #define SUBMODULE_ROUTER_REMOTE_CONFIG (0x4000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for ddsAdapter submodule
  */
  #define SUBMODULE_ROUTER_DDSADAPTER (0x5000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for c37118Adapter submodule
  */
  #define SUBMODULE_ROUTER_C37118ADAPTER (0x7000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for jniAdapterLib submodule
  */
  #define SUBMODULE_ROUTER_JNIADAPTER (0x8000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for routingProcessor submodule
  */
  #define SUBMODULE_ROUTER_ROUTING_PROCESSOR (0x10000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for utilProcessors submodule
  */
  #define SUBMODULE_ROUTER_UTIL_PROCESSORS (0x20000)
  /*i \ingroup ROUTERLogModule
    Submodule ID for legacy submodule
  */
  #define SUBMODULE_ROUTER_LEGACY (0x30000)
 /*i \ingroup ROUTERLogModule
    Submodule ID for cacheAdapter submodule
  */
  #define SUBMODULE_ROUTER_CACHEADAPTER (0x40000)
 /*i \ingroup ROUTERLogModule
    Submodule ID for  monitoring submodule
  */
  #define SUBMODULE_ROUTER_MONITORING (0x50000)
/*i \ingroup ROUTERLogModule
    Submodule ID for testSystem submodule
  */
  #define SUBMODULE_ROUTER_TESTSYSTEM (0x60000)


  /*i \ingroup ROUTERLogModule
    Mask for turning on logging for only the Service submodule
  */
  #define ROUTER_SUBMODULE_MASK_SERVICE (0x0002)
  /*i \ingroup ROUTERLogModule
    Mask for turning on logging for only the CfgManager submodule
  */
  #define ROUTER_SUBMODULE_MASK_CONFIG (0x0003)
  /*i \ingroup ROUTERLogModule
    Mask for turning on logging for all submoudles
  */
  #define ROUTER_SUBMODULE_MASK_ALL (0xFFFFF)

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_UNSUPPORTED_RESOURCE;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_MALFORMED_RESOURCE_IDENTIFIER_s;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_REMOTE_SERVICE_UNSUPPORTED_COMMAND_s;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_REMOTE_SERVICE_UNSUPPORTED_COMMAND_ss;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_REMOTE_SERVICE_UNKNOWN_COMMAND_d;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_REMOTE_SERVICE_COMMAND_FAILURE_s;

extern ROUTERDllVariable
const struct RTILogMessage ROUTER_LOG_ATTACH_ADAPTER_FAILURE_s;

extern ROUTERDllVariable
const struct RTILogMessage RTI_SERVICE_LOG_RUNTIME_PROPERTY_ssssssssL;

extern ROUTERDllExport
void ROUTERLog_setVerbosity(RTILogBitmap submoduleMask, int verbosity);

extern ROUTERDllExport void
ROUTERLog_setBitmaps(RTILogBitmap submoduleMask,
		     RTILogBitmap instrumentationMask);

extern ROUTERDllExport void ROUTERLog_getBitmaps(
    RTILogBitmap *submoduleMask, RTILogBitmap *instrumentationMask);


typedef enum {
    ROUTER_ADVLOG_STANDARD_RESOURCE_FORMAT,
    ROUTER_ADVLOG_SHORT_RESOURCE_FORMAT
} ROUTERAdvlogResourceFormatKind;

extern ROUTERDllExport
void ROUTERServiceAdvlog_setResourceFormatKind(
        ROUTERAdvlogResourceFormatKind formatKind);



#define DEFINE_MODULE_NUMBER_EXP(MODULE_NS_VALUE) \
        MODULE_ ## MODULE_NS_VALUE

#define DEFINE_MODULE_NUMBER(MODULE_NS_VALUE) \
        DEFINE_MODULE_NUMBER_EXP(MODULE_NS_VALUE)

#define RTI_ADVLOG_CONTEXT_DECLARE(DLL_EXPORT, CONTEXT_NAME) \
    extern DLL_EXPORT const struct ADVLOGContext CONTEXT_NAME

#define RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(CONTEXT_NAME) \
    RTI_ADVLOG_CONTEXT_DECLARE(ROUTERDllVariable, CONTEXT_NAME)

#define RTI_ADVLOG_CONTEXT_DEFINE(CONTEXT_NAME, STRING, LOG_NUMBER) \
    const struct ADVLOGContext CONTEXT_NAME = { \
        PRODUCT_WAVEWORKS|DEFINE_MODULE_NUMBER(MODULE_NS)|(LOG_NUMBER), \
        (STRING) \
    }

RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_CREATE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_DELETE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_ENABLE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_DISABLE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_PAUSE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_RUN);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_ADD_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOVE_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_START);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_STOP);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_START_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_STOP_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_PUBLISH_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_PERIODIC_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOTE_GET);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOTE_CREATE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOTE_DELETE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOTE_UPDATE);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_REMOTE_UNKNOWN);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_ON_STREAM_DISCOVERED_s);
RTI_ROUTER_ADVLOG_CONTEXT_DECLARE(RTI_SERVICE_ACTIVITY_ON_STREAM_DISPOSED_s);



  #ifdef __cplusplus
    }	/* extern "C" */
  #endif

#endif /* routingservice_log_h */
