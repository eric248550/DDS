/* (c) Copyright 2003-2018, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)reda_log_impl.h    generated by: makeheader    Thu Feb 28 22:11:30 2019
 *
 *		built from:	log_impl.ifc
 */

#ifndef reda_log_impl_h
#define reda_log_impl_h


  #ifndef reda_dll_h
    #include "reda/reda_dll.h"
  #endif
  #ifndef log_common_h
    #include "log/log_common.h"
  #endif

#ifdef __cplusplus
    extern "C" {
#endif

extern REDADllVariable RTILogBitmap REDALog_g_submoduleMask;

extern REDADllVariable RTILogBitmap REDALog_g_instrumentationMask;


#define REDALog_exception \
  if ((RTILog_setLogLevel != NULL)                                             \
          && (REDALog_g_instrumentationMask & RTI_LOG_BIT_EXCEPTION)           \
          && (REDALog_g_submoduleMask & REDA_CURRENT_SUBMODULE)) {             \
      RTILog_setLogLevel(RTI_LOG_BIT_EXCEPTION);                               \
  }                                                                            \
  if ((REDALog_g_instrumentationMask & RTI_LOG_BIT_EXCEPTION)                  \
          && (REDALog_g_submoduleMask & REDA_CURRENT_SUBMODULE))               \
      RTILog_printContextAndMsg


#define REDALog_warn \
  if ((RTILog_setLogLevel != NULL)                                             \
          && (REDALog_g_instrumentationMask & RTI_LOG_BIT_WARN)                \
          && (REDALog_g_submoduleMask & REDA_CURRENT_SUBMODULE)) {             \
      RTILog_setLogLevel(RTI_LOG_BIT_WARN);                                    \
  }                                                                            \
  if ((REDALog_g_instrumentationMask & RTI_LOG_BIT_WARN)                       \
          && (REDALog_g_submoduleMask & REDA_CURRENT_SUBMODULE))               \
      RTILog_printContextAndMsg


#ifdef RTI_PRECONDITION_TEST
  #define  REDALog_preconditionOnly(declaration) declaration
#else /* nothing */
  #define REDALog_preconditionOnly(declaration)
#endif /* RTI_PRECONDITION_TEST */


#define REDALog_logPreconditionFailed(preconditionExpression)                  \
{                                                                              \
    REDALog_exception(                                                         \
            METHOD_NAME,                                                       \
            &RTI_LOG_PRECONDITION_FAILURE_s,                                   \
            #preconditionExpression);                                          \
    RTILog_onAssert();                                                         \
}


#define REDALog_testPreconditionAlways(preconditionExpression, failAction)     \
  if (preconditionExpression) {                                                \
      REDALog_logPreconditionFailed(preconditionExpression);                   \
      RTILog_onAssert();                                                       \
      failAction;                                                              \
  }


#ifdef RTI_PRECONDITION_TEST
  #define REDALog_testPrecondition(preconditionExpression, failAction)         \
    if (preconditionExpression) {                                              \
        REDALog_logPreconditionFailed(preconditionExpression);                 \
        failAction;                                                            \
    }
#else /* do nothing */
  #define REDALog_testPrecondition(preconditionExpression, failAction)
#endif /* RTI_PRECONDITION_TEST */



#ifdef __cplusplus
    }   /* extern "C" */
#endif

#endif /* reda_log_impl_h */
